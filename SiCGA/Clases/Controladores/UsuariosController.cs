///////////////////////////////////////////////////////////
//  UsuariosController.cs
//  Implementation of the Class UsuariosController
//  Generated by Enterprise Architect
//  Created on:      10-mar.-2017 13:19:09
//  Original author: Ing. Alan Adalberto Ortiz Pérez
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using SiCGA.Clases.Modelos;


namespace SiCGA.Clases.Controladores {
	/// <summary>
	/// Controlador del Modelo Usuarios
	/// </summary>
	public class UsuariosController : Metodos {

		public UsuariosController(){

		}

		~UsuariosController(){

		}
        /// <summary>
        /// Método para Actualizar el Registro del Modelo Usuario
        /// </summary>
		/// <param name="o"></param>
		public override bool ActualizarRegistro(object o){

            if (o.GetType() == typeof(UsuariosModel))// Validar que el objeto dea del Tipo UsuariosModel
            {
                var u = (UsuariosModel)o; // Casteamos el Objeto al tipo UsuariosModel

                if(Abrir()) // Si Abre la conexión
                {
                    try
                    {
                        List<Parametros> lista = new List<Parametros>();
                        lista.Add(new Parametros(@"opc", "3"));// Opción para actualizar dentro del procedimiento
                        lista.Add(new Parametros(@"id", u.Id.ToString()));// Todos los parámetros deben de ir en string/cadena clase nativa del CLR
                        lista.Add(new Parametros(@"usr", u.Usuario));
                        lista.Add(new Parametros(@"pwd", u.Contraseña));
                        lista.Add(new Parametros(@"nom", u.Nombre));
                        lista.Add(new Parametros(@"pat", u.Paterno));
                        lista.Add(new Parametros(@"mat", u.Materno));
                        lista.Add(new Parametros(@"fondo", u.Fondo.Id.ToString()));
                        lista.Add(new Parametros(@"subf", u.SubFondo.Id.ToString()));
                        lista.Add(new Parametros(@"unidad", u.UnidadAdmva.Id.ToString()));
                        lista.Add(new Parametros(@"jera", u.Jerarquia.Id.ToString()));
                        lista.Add(new Parametros(@"est", (u.Estatus == true ? "1" : "0")));// Si es verdadero = Activo :1; si es Falso = inactivo : 0

                        string proce = "sp_usuarios_crud";

                        if(EjecutarProcedimiento(proce, lista))
                        { return true; }// Se ejecutó el procedimiento exitosamente
                        else { return false; }// No se ejecutó el procedimiento
                    }
                    catch(Exception e)
                    {
                        Error = e.Message.ToString(); // Catchar el error
                        return false; // Indicar que no se realizo la consulta/procedimiento
                    }
                    finally { Cerrar(); } // Asegurarnos de que se cierra la conexión siempre
                }
                else // Si no abre la conexión
                { return false; }
            }
            else // Si no es del tipo UsuariosModel
            { return false; }
		}

		/// <summary>
		/// Consultar un Usuario del Sistema
		/// </summary>
		/// <returns>Boleano</returns>
		/// <param name="o">Objeto del tipo Usuario</param>
		public override bool ConsultarRegistro(object o){

            if (o.GetType() == typeof(UsuariosModel))
            {
                var u = (UsuariosModel)o;
                if (Abrir())
                {
                    try
                    {
                        List<Parametros> lista = new List<Parametros>();
                        lista.Add(new Parametros(@"opc", "4"));
                        lista.Add(new Parametros(@"id", u.Id.ToString()));
                        lista.Add(new Parametros(@"usr", string.Empty));
                        lista.Add(new Parametros(@"pwd", string.Empty));
                        lista.Add(new Parametros(@"nom", string.Empty));
                        lista.Add(new Parametros(@"pat", string.Empty));
                        lista.Add(new Parametros(@"mat", string.Empty));
                        lista.Add(new Parametros(@"fondo", string.Empty));
                        lista.Add(new Parametros(@"subf", string.Empty));
                        lista.Add(new Parametros(@"unidad", string.Empty));
                        lista.Add(new Parametros(@"jera", string.Empty));
                        lista.Add(new Parametros(@"est", string.Empty));

                        string proce = "sp_usuarios_crud";

                        if (ConsultarProcedimiento(proce, lista))
                        {
                            return true;
                        }
                        else
                        { return false; }
                    }
                    catch(Exception e)
                    {
                        Error = e.Message.ToString();
                        return false;
                    }
                    finally { Cerrar(); }
                }
                else
                { return false; }
            }
            else
            { return false; }
		}

		public override bool ConsultarRegistros(){

			return false;
		}

		/// <summary>
		/// Ingresar un Usuario al Sistema
		/// </summary>
		/// <returns>Boleano</returns>
		/// <param name="o">Objeto de tipo Usuario</param>
		public override bool IngresarRegisto(object o){

			return false;
		}

	}//end UsuariosController

}//end namespace Controladores